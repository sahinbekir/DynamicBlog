@using X.PagedList
@using X.PagedList.Mvc.Core
@model IPagedList<EntityLayer.Concrete.Category>
@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/AdminLayout.cshtml";
}


<h1>Category List</h1>
<table class="table table-bordered">
    <tr>
        <th> # </th>
        <th> Category Name </th>
        <th> Do Activate </th>
        <th> Do Passive </th>
        <th> Design </th>
    </tr>
    @foreach (var item in Model)
    {
        <tr>
            <th>@item.CategoryID</th>
            <td>@item.CategoryName</td>
            <td><a href="#" class="btn btn-warning">Active</a></td>
            <td><a href="#" class="btn btn-danger">Passive</a></td>
            <td><a href="#" class="btn btn-success">Design</a></td>
            <td><a href="/Admin/Category/CategoryDelete/@item.CategoryID/" id="DeleteBtn"
                onclick="return confirm('Are You Sure');" class="btn btn-success">Delete</a></td>
        </tr>
    }
</table>
<br />
<a href="/Admin/Category/AddCategory/" class="btn btn-primary">Category Add</a>
<br />
<br />
@Html.PagedListPager((IPagedList)Model, page => Url.Action("Index", new {page}))
